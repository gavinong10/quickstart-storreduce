{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "VPC StorReduce",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "StorReduce Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "StorReducePassword",
                        "InstanceType",
                        "BucketName",
                        "NumSRRHosts",
                        "StorReduceLicense",
                        "SSLCertificateId",
                        "DomainName",
                        "ValidationDomainName"                        
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "NumberOfAZs",
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PrivateSubnet1ACIDR",
                        "PrivateSubnet2ACIDR",
                        "PrivateSubnet3ACIDR",
                        "PrivateSubnet4ACIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "PublicSubnet3CIDR",
                        "PublicSubnet4CIDR",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "NATInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Linux Bastion Configuration"
                    },
                    "Parameters": [
                        "NumBastionHosts",
                        "BastionAMIOS",
                        "BastionInstanceType"
                    ]
                    },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "StorReducePassword": {
                    "default": "StorReduce Password"
                },
                "StorReduceLicense": {
                    "default": "StorReduce license"
                },
                "SSLCertificateId": {
                    "default": "SSL Certificate ID"
                },
                "DomainName": {
                    "default": "Domain Name"
                },
                "ValidationDomainName": {
                    "default": "Validation Domain Name"
                },
                "NumSRRHosts": {
                    "default": "Number of StorReduce servers"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "BastionAMIOS": {
                    "default": "Bastion AMI Operating System"
                },
                "BastionInstanceType": {
                    "default": "Bastion Instance Type"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "InstanceType": {
                    "default": "Instance Type"
                },
                "BucketName": {
                    "default": "Bucket Name"
                },
                "NumberOfAZs": {
                    "default": "Number of Availability Zones"
                },
                "NumBastionHosts": {
                    "default": "Number of Bastion Hosts"
                },
                "PrivateSubnet1ACIDR": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2ACIDR": {
                    "default": "Private Subnet 2 CIDR"
                },
                "PrivateSubnet3ACIDR": {
                    "default": "Private Subnet 3 CIDR"
                },
                "PrivateSubnet4ACIDR": {
                    "default": "Private Subnet 4 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "PublicSubnet3CIDR": {
                    "default": "Public Subnet 3 CIDR"
                },
                "PublicSubnet4CIDR": {
                    "default": "Public Subnet 4 CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed Bastion External Access CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                }
            }
        }
    },
    "Parameters": {
        "InstanceType" : {
            "Description" : "EC2 instance type",
            "Type" : "String",
                "Default" : "i3.4xlarge",
                "AllowedValues":[
                    "i3.xlarge",
                    "i3.2xlarge",
                    "i3.4xlarge",
                    "i3.8xlarge",
                    "i3.16xlarge"
                ],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "BucketName" : {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z\\-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "The bucket to which StorReduce will store data",
            "Type": "String"
        },
        "StorReduceLicense": {
            "Description" : "A valid StorReduce license",
            "ConstraintDescription" : "Must be a current and valid StorReduce license.",
            "Type" : "String",
            "Default": ""
        },
        "StorReducePassword": {
            "Description": "Password for the StorReduce admin root user",
            "NoEcho": "True",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "BastionAMIOS": {
            "AllowedValues": [
                "Amazon-Linux-HVM",
                "CentOS-7-HVM",
                "Ubuntu-Server-14.04-LTS-HVM",
                "Ubuntu-Server-16.04-LTS-HVM"
            ],
            "Default": "Amazon-Linux-HVM",
            "Description": "The Linux distribution for the AMI to be used for the bastion instances",
            "Type": "String"
        },
        "BastionInstanceType": {
            "Description": "Amazon EC2 instance type for the bastion instances",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "SSLCertificateId": {
            "Description" : "The SSL Certificate ID to use for the Load Balancer. This is of the form \"arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012\"",
            "Type": "String",
            "Default": ""
        },
        "DomainName": {
            "Description" : "The Domain Name to be used to generate an SSL certificate (not required if SSLCertificateId exists)",
            "Type": "String",
            "Default": ""
        },
        "ValidationDomainName": {
            "Description" : "The validation domain name to be used to validate domain ownership for an SSL certificate (not required if SSLCertificateId exists)",
            "Type": "String",
            "Default": ""
        },
        "NumBastionHosts": {
            "AllowedValues": [
                "1",
                "2",
                "3",
                "4"
            ],
            "Default": "1",
            "Description": "Enter the number of bastion hosts to create",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z\\-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "gong-cf-templates",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for bastion and load balancer access",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        },
        "NATInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large",
                "m4.large"
            ],
            "Default": "t2.small",
            "Description": "Amazon EC2 instance type for the NAT instances. This is used only if the region does not support NAT gateways.",
            "Type": "String"
        },
        "NumberOfAZs": {
            "AllowedValues": [
                "2",
                "3",
                "4"
            ],
            "Default": "3",
            "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
            "Type": "String"
        },
        "PrivateSubnet1ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1A located in Availability Zone 1",
            "Type": "String"
        },
        "PrivateSubnet2ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2A located in Availability Zone 2",
            "Type": "String"
        },
        "PrivateSubnet3ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.64.0/19",
            "Description": "CIDR block for private subnet 3A located in Availability Zone 3",
            "Type": "String"
        },
        "PrivateSubnet4ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.96.0/19",
            "Description": "CIDR block for private subnet 4A located in Availability Zone 4",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet3CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.160.0/20",
            "Description": "CIDR block for the public DMZ subnet 3 located in Availability Zone 3",
            "Type": "String"
        },
        "PublicSubnet4CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.176.0/20",
            "Description": "CIDR block for the public DMZ subnet 4 located in Availability Zone 4",
            "Type": "String"
        },
        "NumSRRHosts": {
            "AllowedValues": [
                3,
                5,
                7,
                9,
                11,
                13,
                15,
                17,
                19,
                21,
                23,
                25,
                27,
                29,
                31
            ],
            "Description": "The number of StorReduce hosts to configure",
            "MaxValue": 31,
            "MinValue": 3,
            "Default": 3,
            "Type": "Number",
            "ConstraintDescription": "Number of StorReduce hosts must be an odd number between 3 and 31."
        },
    },
    "Rules": {},
    "Conditions": {
        "3AZCondition": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfAZs"
                        },
                        "3"
                    ]
                },
                {
                    "Condition": "4AZCondition"
                }
            ]
        },
        "4AZCondition": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfAZs"
                },
                "4"
            ]
        },
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3.amazonaws.com/quickstart-reference/aws/vpc/latest/templates/aws-vpc.template",
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                        ",", {
                            "Ref": "AvailabilityZones"
                        }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },

                     "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1ACIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2ACIDR"
                    },
                    "PrivateSubnet3ACIDR": {
                        "Ref": "PrivateSubnet3ACIDR"
                    },
                    "PrivateSubnet4ACIDR": {
                        "Ref": "PrivateSubnet4ACIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "PublicSubnet3CIDR": {
                        "Ref": "PublicSubnet3CIDR"
                    },
                    "PublicSubnet4CIDR": {
                        "Ref": "PublicSubnet4CIDR"
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3.amazonaws.com/quickstart-reference/linux/bastion/latest/templates/linux-bastion.template",
                "Parameters": {
                    "BastionAMIOS": {
                        "Ref": "BastionAMIOS"
                    },
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "EnableBanner": "false",
                    "EnableTCPForwarding": "false",
                    "EnableX11Forwarding": "false",
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumBastionHosts": {
                        "Ref": "NumBastionHosts"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "LoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables remote access to port 80 and 443",
                "VpcId": {
                    "Fn::GetAtt": [
                        "VPCStack",
                        "Outputs.VPCID"
                    ]
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": { "Ref": "RemoteAccessCIDR" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": { "Ref": "RemoteAccessCIDR" }
                    }
                ]
            }
        },
        "AllInternalAccessSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables StorReduce and SSH ports TCP access from within the VPC",
                "VpcId": {
                    "Fn::GetAtt": [
                        "VPCStack",
                        "Outputs.VPCID"
                    ]
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": { "Ref": "VPCCIDR" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": { "Ref": "VPCCIDR" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 8095,
                        "ToPort": 8099,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 2379,
                        "ToPort": 2380,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 8080,
                        "ToPort": 8080,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "StorReduceHostRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": [
                                            "arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*",
                                            {
                                                "Partition": {
                                                    "Fn::If": [
                                                        "GovCloudCondition",
                                                        "aws-us-gov",
                                                        "aws"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "aws-quick-start-s3-policy"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:s3:::",
                                                {
                                                    "Ref": "BucketName"
                                                }
                                            ]
                                        ]
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "srr-quick-start-s3-policy-bucket"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:GetObject",
                                        "s3:DeleteObject",
                                        "s3:ListMultipartUploadParts",
                                        "s3:AbortMultipartUpload"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:s3:::",
                                                {
                                                    "Ref": "BucketName"
                                                },
                                                "/*"
                                            ]
                                        ]
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "srr-quick-start-s3-policy-objects"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "elasticloadbalancing:Describe*",
                                        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                        "autoscaling:Describe*",
                                        "autoscaling:EnterStandby",
                                        "autoscaling:ExitStandby",
                                        "autoscaling:UpdateAutoScalingGroup",
                                        "autoscaling:SuspendProcesses",
                                        "autoscaling:ResumeProcesses"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "elb-join-policy"
                    }
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "StorReduceHostProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "DependsOn": ["StorReduceHostRole"],
            "Properties": {
                "Roles": [
                    {
                        "Ref": "StorReduceHostRole"
                    }
                ],
                "Path": "/"
            }
        },
        "SrrBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Ref": "BucketName"
                }
            }
        },

        "SrrGroup": {
                "DependsOn": [
                    "VPCStack",
                    "StorReduceHostProfile"
                ],
                "Type": "AWS::CloudFormation::Stack",
                "Properties": {
                    "TemplateURL": {
                        "Fn::Sub": [
                            "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/storreduce-group-az${NumberOfAZs}.template",
                            {
                                "QSS3Region": {
                                    "Fn::If": [
                                        "GovCloudCondition",
                                        "s3-us-gov-west-1",
                                        "s3"
                                    ]
                                }
                            }
                        ]
                    },
                    "Parameters": {
                        "QSS3BucketName": {
                            "Ref": "QSS3BucketName"
                        },
                        "QSS3KeyPrefix": {
                            "Ref": "QSS3KeyPrefix"
                        },
                        "StorReducePassword": {
                            "Ref": "StorReducePassword"
                        },
                        "HostRole": {
                            "Ref": "StorReduceHostRole"
                        },
                        "HostProfile": {
                            "Ref": "StorReduceHostProfile"
                        },
                        "KeyPairName": {
                            "Ref": "KeyPairName"
                        },
                        "InstanceType": {
                            "Ref": "InstanceType"
                        },
                        "BucketName": {
                            "Ref": "BucketName"
                        },
                        "SecurityGroupIds": {
                            "Fn::Join": [
                                ",",
                                [
                                    {
                                        "Ref": "AllInternalAccessSecurityGroup"
                                    }
                                ]
                            ]
                        },
                        "PrivateSubnetsToSpan": {
                            "Fn::Join": [
                                ",",
                                [
                                    {
                                        "Fn::GetAtt": [
                                            "VPCStack",
                                            "Outputs.PrivateSubnet1AID"
                                        ]
                                    },
                                    {
                                        "Fn::GetAtt": [
                                            "VPCStack",
                                            "Outputs.PrivateSubnet2AID"
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "3AZCondition",
                                            {
                                                "Fn::GetAtt": [
                                                    "VPCStack",
                                                    "Outputs.PrivateSubnet3AID"
                                                ]
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    },
                                    {
                                        "Fn::If": [
                                            "4AZCondition",
                                            {
                                                "Fn::GetAtt": [
                                                    "VPCStack",
                                                    "Outputs.PrivateSubnet4AID"
                                                ]
                                            },
                                            {
                                                "Ref": "AWS::NoValue"
                                            }
                                        ]
                                    }
                                ]
                            ]
                        },
                        "NumSRRHosts": { "Ref": "NumSRRHosts" },
                        "PublicSubnetsToSpan": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PublicSubnet1ID"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PublicSubnet2ID"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "3AZCondition",
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet3ID"
                                            ]
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "4AZCondition",
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet4ID"
                                            ]
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                        "AvailabilityZones": {
                            "Fn::Join": [
                                ",",
                                {
                                    "Ref": "AvailabilityZones"
                                }
                            ]
                        },
                        "SSLCertificateId": {
                            "Ref": "SSLCertificateId"
                        },
                        "DomainName": {
                            "Ref": "DomainName"
                        },
                        "ValidationDomainName": {
                            "Ref": "ValidationDomainName"
                        },
                        "LoadBalancerSecurityGroup": { "Ref": "LoadBalancerSecurityGroup" },
                        "StorReduceLicense": {
                            "Ref": "StorReduceLicense"
                        }
                    }
                }
            }
    },
    "Mappings": {
    },
    "Outputs": {
    }
}